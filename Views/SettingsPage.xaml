<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ViewModels="clr-namespace:MobiHymnMaui.ViewModels"
    xmlns:fontawesome="clr-namespace:FontAwesome" xmlns:elements="clr-namespace:MobiHymnMaui.Elements"
    x:Class="MobiHymnMaui.Views.SettingsPage"
    Title="App Settings">
	<ContentPage.BindingContext>
		<ViewModels:SettingsViewModel/>
	</ContentPage.BindingContext>
    <ContentPage.Resources>
        <Style TargetType="BoxView">
            <Setter Property="HeightRequest" Value="1" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
            <Setter Property="Background" Value="{AppThemeBinding Dark={StaticResource Gray}, Light={StaticResource GrayLight}}" />
        </Style>

    </ContentPage.Resources>
    <StackLayout Padding="0, 10, 0, 0">
        <Grid RowDefinitions="15,Auto,15" ColumnDefinitions="15,*,Auto,15">
            <Label
                Text="Dark Mode"
                Style="{StaticResource Key=Title}"
                Grid.Column="1"
                Grid.Row="1"
            />
            <Switch
                IsToggled="{Binding IsDarkMode}"
                x:Name="swDarkMode"
                Toggled="swDarkMode_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
                Grid.Column="2"
                Grid.Row="1"
            />

        </Grid>
        <BoxView />
        <Grid RowDefinitions="15,Auto,15" ColumnDefinitions="15,*,Auto,15">
            <Label
                Text="Keep Awake"
                Style="{StaticResource Key=Title}"
                Grid.Column="1"
                Grid.Row="1"
            />
            <Switch
                IsToggled="{Binding KeepAwake}"
                x:Name="swKeepAwake"
                Toggled="swKeepAwake_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
                Grid.Column="2"
                Grid.Row="1"
            />
        </Grid>
        <Grid RowDefinitions="15,Auto,15" ColumnDefinitions="15,*,Auto,15" IsVisible="False">
            <Label
                Text="Lock Orientation"
                Style="{StaticResource Key=Title}"
                Grid.Column="1"
                Grid.Row="1"
            />
            <Switch
                IsToggled="{Binding IsOrientationLocked}"
                x:Name="swOrientationLock"
                Toggled="swOrientationLock_Toggled"
                ThumbColor="{StaticResource Primary}"
                OnColor="{StaticResource PrimaryLight}"
                Grid.Column="2"
                Grid.Row="1"
            />
        </Grid>
        <BoxView />
        <Grid RowDefinitions="15,Auto,15" ColumnDefinitions="15,*,Auto,15" IsVisible="False">
            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding ShowSyncs}" Value="False">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </Grid.Triggers>
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Tapped="swResync_Clicked" />
            </Grid.GestureRecognizers>
            <Label
                Text="Resync Resources"
                Style="{StaticResource Key=Title}"
                Grid.Column="1"
                Grid.Row="1"/>
            <Button
                x:Name="swResync"
                HorizontalOptions="Center"
                Style="{StaticResource Button-Clear}"
                WidthRequest="20"
                Grid.Column="2"
                Grid.Row="1">
                <Button.ImageSource>
                    <FontImageSource
                        FontFamily="FAS"
                        Color="{AppThemeBinding Dark={StaticResource Primary}, Light={StaticResource PrimaryText}}"
                        Size="Small"
                        Glyph="{x:Static fontawesome:FontAwesomeIcons.Sync}"
                    />
                </Button.ImageSource>
            </Button>
        </Grid>
        <Grid IsVisible="False" RowDefinitions="*" ColumnDefinitions="*">
            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding ShowSyncs}" Value="True">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </Grid.Triggers>
            <StackLayout>
                <Label Text="Hymn Updates:" TextColor="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource PrimaryText}}"/>
            </StackLayout>
            <StackLayout>
                <elements:TimelineItem Item="{Binding ResyncCreateList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowCreate}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <elements:TimelineItem Item="{Binding ResyncUpdateList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowUpdate}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <elements:TimelineItem Item="{Binding ResyncDeleteList}" Margin="10" IsVisible="False">
                    <elements:TimelineItem.Triggers>
                        <DataTrigger TargetType="elements:TimelineItem" Binding="{Binding ShowDelete}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </elements:TimelineItem.Triggers>
                </elements:TimelineItem>
                <FlexLayout JustifyContent="End">
                    <Button x:Name="btnResync" Text="Sync" Padding="30,10" Clicked="btnResync_Clicked"/>
                </FlexLayout>
            </StackLayout>

        </Grid>
    </StackLayout>

</ContentPage>

